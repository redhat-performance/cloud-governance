pipeline {
    agent {
        docker {
            label 'cloud-governance-worker'
            image 'quay.io/athiru/centos-stream8-podman:latest'
            args  '--rm -u root -v /tmp/cloud-governance/:/var/lib/containers --privileged'
        }
    }
    environment {
        AWS_ACCESS_KEY_ID_PERF = credentials('cloud-governance-aws-access-key-id-perf')
        AWS_SECRET_ACCESS_KEY_PERF = credentials('cloud-governance-aws-secret-access-key-perf')
        AWS_ACCESS_KEY_ID_DELETE_PERF = credentials('cloud-governance-aws-access-key-id-delete-perf')
        AWS_SECRET_ACCESS_KEY_DELETE_PERF = credentials('cloud-governance-aws-secret-access-key-delete-perf')
        BUCKET_PERF = credentials('cloud-governance-bucket-perf')
        AWS_ACCESS_KEY_ID_PSAP = credentials('cloud-governance-aws-access-key-id-psap')
        AWS_SECRET_ACCESS_KEY_PSAP = credentials('cloud-governance-aws-secret-access-key-psap')
        AWS_ACCESS_KEY_ID_DELETE_PSAP = credentials('cloud-governance-aws-access-key-id-delete-psap')
        AWS_SECRET_ACCESS_KEY_DELETE_PSAP = credentials('cloud-governance-aws-secret-access-key-delete-psap')
        BUCKET_PSAP = credentials('cloud-governance-bucket-psap')
        AWS_ACCESS_KEY_ID_RH_PERF = credentials('cloud-governance-aws-access-key-id-rh-perf')
        AWS_SECRET_ACCESS_KEY_RH_PERF = credentials('cloud-governance-aws-secret-access-key-rh-perf')
        BUCKET_RH_PERF = credentials('cloud-governance-bucket-rh-perf')
        AWS_ACCESS_KEY_ID_DELETE_PERF_SCALE = credentials('cloud-governance-aws-access-key-id-delete-perf-scale')
        AWS_SECRET_ACCESS_KEY_DELETE_PERF_SCALE = credentials('cloud-governance-aws-secret-access-key-delete-perf-scale')
        BUCKET_PERF_SCALE = credentials('cloud-governance-bucket-perf_scale')
        ES_HOST = credentials('cloud-governance-es-host')
        ES_PORT = credentials('cloud-governance-es-port')
        GITHUB_TOKEN = credentials('cloud-governance-git-access-token')
        SENDER_MAIL = credentials('cloud-governance-sender-mail')
        SENDER_PASSWORD = credentials('cloud-governance-sender-password')
        AWS_IAM_USER_SPREADSHEET_ID = credentials('cloud-governance-aws-iam-user-spreadsheet-id')
        GOOGLE_APPLICATION_CREDENTIALS = credentials('cloud-governance-google-application-credentials')
        CLOUD_GOVERNANCE_SPECIAL_USER_MAILS = credentials('cloud-governance-special-user-mails')
        ACCOUNT_ADMIN = credentials('cloud-governance-account-admin')
        USERS_MANAGER_MAILS = credentials('cloud-governance-users-managers-mails')

        contact1 = "ebattat@redhat.com"
        contact2 = "athiruma@redhat.com"
    }
    stages {
        stage('Checkout') { // Checkout (git clone ...) the projects repository
          steps {
            checkout scm
           }
        }
        stage('Initial Cleanup') {
            steps {
                 sh '''if [[ "$(podman images -q quay.io/ebattat/cloud-governance 2> /dev/null)" != "" ]]; then podman rmi -f $(podman images -q quay.io/ebattat/cloud-governance 2> /dev/null); fi'''
            }
        }
        stage('Run Policies') {
            steps {
                 sh 'python3 jenkins/run_policies.py'
            }
        }
        stage('Upload ElasticSearch') {
            steps {
                sh 'python3 jenkins/run_upload_es.py'
            }
        }
        stage('Finalize Cleanup') {
            steps {
                 sh '''if [[ "$(podman images -q quay.io/ebattat/cloud-governance 2> /dev/null)" != "" ]]; then podman rmi -f $(podman images -q quay.io/ebattat/cloud-governance 2> /dev/null); fi'''
                 deleteDir()
            }
        }
    }
    post {
       always {
           deleteDir()
       }
        failure {
              script {
                msg = "Build error for ${env.JOB_NAME} ${env.BUILD_NUMBER} (${env.BUILD_URL})"
                emailext body: """\
            Jenkins job: ${env.BUILD_URL}\nSee the console output for more details:  ${env.BUILD_URL}consoleFull\n\n
            """,
                subject: msg,
                to: "${contact1}, ${contact2}"
            }
        }
    }
}
